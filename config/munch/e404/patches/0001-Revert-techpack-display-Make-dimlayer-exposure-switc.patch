From d2c46f8b876d39f92441f4763171386f401802e8 Mon Sep 17 00:00:00 2001
From: HDzungx <hdzungx@gmail.com>
Date: Sun, 9 Feb 2025 21:41:04 +0700
Subject: [PATCH 1/9] Revert "techpack: display: Make dimlayer exposure
 switchable"

This reverts commit 1b83cc6dee3759d2a05f4d27ebe939fad9bacab9.
---
 techpack/display/msm/dsi/dsi_display.c | 64 +-------------------------
 techpack/display/msm/dsi/dsi_panel.h   |  3 --
 techpack/display/msm/sde/sde_crtc.c    |  9 +---
 3 files changed, 3 insertions(+), 73 deletions(-)

diff --git a/techpack/display/msm/dsi/dsi_display.c b/techpack/display/msm/dsi/dsi_display.c
index d8d7a80ad..3674d5177 100644
--- a/techpack/display/msm/dsi/dsi_display.c
+++ b/techpack/display/msm/dsi/dsi_display.c
@@ -245,7 +245,7 @@ int dsi_display_set_backlight(struct drm_connector *connector,
 	}
 
 #ifdef CONFIG_DRM_SDE_EXPO
-	if(panel->dimlayer_exposure) {
+	if (bl_lvl && !panel->spec_pdata->aod_mode) {
 		bl_temp = expo_map_dim_level((u32)bl_temp, dsi_display);
 	}
 #endif
@@ -5548,70 +5548,8 @@ static DEVICE_ATTR(fod_ui, 0444,
 			sysfs_fod_ui_read,
 			NULL);
 
-#ifdef CONFIG_DRM_SDE_EXPO
-static ssize_t sysfs_dimlayer_exposure_read(struct device *dev,
-	struct device_attribute *attr, char *buf)
-{
-	struct dsi_display *display;
-	struct dsi_panel *panel;
-	bool status;
-
-	display = dev_get_drvdata(dev);
-	if (!display) {
-		pr_err("Invalid display\n");
-		return -EINVAL;
-	}
-
-	panel = display->panel;
-
-	mutex_lock(&panel->panel_lock);
-	status = panel->dimlayer_exposure;
-	mutex_unlock(&panel->panel_lock);
-
-	return snprintf(buf, PAGE_SIZE, "%d\n", status);
-}
-
-static ssize_t sysfs_dimlayer_exposure_write(struct device *dev,
-	struct device_attribute *attr, const char *buf, size_t count)
-{
-	struct dsi_display *display;
-	struct dsi_panel *panel;
-	struct drm_connector *connector = NULL;
-	bool status;
-	int rc = 0;
-
-	display = dev_get_drvdata(dev);
-	if (!display) {
-		pr_err("Invalid display\n");
-		return -EINVAL;
-	}
-
-	rc = kstrtobool(buf, &status);
-	if (rc) {
-		pr_err("%s: kstrtobool failed. rc=%d\n", __func__, rc);
-		return rc;
-	}
-
-	panel = display->panel;
-
-	panel->dimlayer_exposure = status;
-	dsi_display_set_backlight(connector, display, panel->bl_config.bl_level);
-
-	return count;
-}
-#endif
-
-#ifdef CONFIG_DRM_SDE_EXPO
-static DEVICE_ATTR(dimlayer_exposure, 0644,
-			sysfs_dimlayer_exposure_read,
-			sysfs_dimlayer_exposure_write);
-#endif
-
 static struct attribute *display_fs_attrs[] = {
 	&dev_attr_fod_ui.attr,
-#ifdef CONFIG_DRM_SDE_EXPO
-	&dev_attr_dimlayer_exposure.attr,
-#endif
 	&dev_attr_hbm.attr,
 	NULL,
 };
diff --git a/techpack/display/msm/dsi/dsi_panel.h b/techpack/display/msm/dsi/dsi_panel.h
index 74b6fd246..f88238de5 100644
--- a/techpack/display/msm/dsi/dsi_panel.h
+++ b/techpack/display/msm/dsi/dsi_panel.h
@@ -244,9 +244,6 @@ struct dsi_panel {
 
 	struct brightness_alpha_pair *fod_dim_lut;
 	u32 fod_dim_lut_count;
-#ifdef CONFIG_DRM_SDE_EXPO
-	bool dimlayer_exposure;
-#endif
 	int hbm_mode;
 };
 
diff --git a/techpack/display/msm/sde/sde_crtc.c b/techpack/display/msm/sde/sde_crtc.c
index 3a7baef56..cf1237688 100644
--- a/techpack/display/msm/sde/sde_crtc.c
+++ b/techpack/display/msm/sde/sde_crtc.c
@@ -2616,6 +2616,8 @@ static int sde_crtc_config_exposure_dim_layer(struct drm_crtc_state *crtc_state,
 	struct sde_crtc_state *cstate = to_sde_crtc_state(crtc_state);
 	struct drm_display_mode *mode = &crtc_state->adjusted_mode;
 	int alpha = sde_crtc_get_property(cstate, CRTC_PROP_DIM_LAYER_EXPO);
+	struct dsi_display *dsi_display = get_main_display();
+	struct dsi_panel *panel = dsi_display->panel;
 
 	kms = _sde_crtc_get_kms(crtc_state->crtc);
 	if (!kms || !kms->catalog) {
@@ -4904,13 +4906,6 @@ static int sde_crtc_exposure_atomic_check(struct sde_crtc_state *cstate,
 		struct plane_state *pstates, int cnt)
 {
 	int i, zpos = 0;
-	struct dsi_display *dsi_display = get_main_display();
-	struct dsi_panel *panel = dsi_display->panel;
-
-	if (!panel->dimlayer_exposure) {
-		cstate->exposure_dim_layer = NULL;
-		return 0;
-	}
 
 	for (i = 0; i < cnt; i++) {
 		if (pstates[i].stage > zpos)
-- 
2.45.2

